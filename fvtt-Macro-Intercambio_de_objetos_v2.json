{
  "name": "Intercambio de objetos v2",
  "type": "script",
  "sort": 100001,
  "flags": {
    "exportSource": {
      "world": "aquelarre",
      "system": "sandbox",
      "coreVersion": "0.7.9",
      "systemVersion": "0.7.6"
    }
  },
  "scope": "global",
  "command": "let html = `\n  <script>  \n  // --------------------------------------------------------------------------------------\n  // GearExchange\n  // This macro needs the following\n  //  - Gear ciTems must belong to a specific group\n  //  - User must have OWNER right to both source actor and target actor\n  //  - user must select source and target tokens  \n  //  - \n  // Change settings to fit your needs\n  // \n  // To change the width of the form(dialog), change the rows at the bottom with\n  //   d.options.width = 600;\n  //   d.position.width = 600;\n  //\n  // Macro by Ramses800, 2021-03-25\n  // ---------------------------------------------------------------------------------------\n  function Setting_GearGroupKey()          {return 'PON_TU_KEY_DE_GRUPO_AQUI';  }// this must be specified according to your groups key \n  // ---------------------------------------------------------------------------------------\n  // generic code below\n  // ---------------------------------------------------------------------------------------\n  </script>\n  <style> \n  table.mastertable{\n    border-spacing: 0px;\n    border-top: 0px solid transparent;\n    border-bottom: 0px solid transparent;\n    background: rgba(0, 0, 0, 0) !important;\n  }\n  td.topAlign{\n    vertical-align:top;\n  } \n  td.centerAlign{\n    text-align:center;\n  } \n            \n  th.portrait{          \n    text-align:left;\n     \n    width:60px;\n    padding:2px 0px 0px 2px;\n    vertical-align:middle;\n  }             \n  \n  th.leftpad{\n    padding-left:3px;\n    padding-right:3px;\n  }\n  \n  tbody.sep{\n     \n    display:block;\n    background: rgba(0, 0, 0, 0) !important;\n  }\n  \n  td.halftd{  \n    width:50%;  \n    text-align:left; \n    vertical-align:top; \n    padding:0px 3px 0px 3px;\n    background: rgba(0, 0, 0, 0) !important;\n  }  \n  \n  tr.major{\n    padding:0px 0px 0px 0px;\n    border: 0px solid transparent;\n    background: rgba(0, 0, 0, 0) !important;\n    margin-top:0px;\n  }\n  td.moveaction{\n    width:24px;\n    text-align:center;\n    padding-right: 3px;\n  }\n  th.alignLeftth{\n    text-align:left;\n    width:40%;\n  } \n  img.item{\n    height:36px;\n  } \n  td.itemimage{\n    width:40px;\n  }  \n \n  .hbo:hover {box-shadow:0 0 5px red}\n  </style>     \n  \n  <i title=\"Refresh\" class=\"fas fa-redo-alt hbo\" onclick=\"ListGear()\"></i>\n  <table id=\"tblGearExchange\" class=\"mastertable\"> \n    <tbody class=\"sep\">\n    <tr class=\"major\">\n      <td class=\"halftd\"> \n        <table>\n         <thead>\n            <tr><th id=\"ActorAPortrait\" class=\"portrait\"></th><th id=\"ActorAName\" class=\"halftd\"></th></tr>\n          </thead>  \n        </table>\n      </td>\n      <td class=\"halftd\">\n        <table> \n          <thead>\n            <tr><th id=\"ActorBPortrait\" class=\"portrait\"></th><th id=\"ActorBName\" class=\"halftd\"></th></tr>\n          </thead>  \n        </table>\n      </td>\n    </tr>\n    \n    <tr class=\"major\">\n      <td class=\"halftd\"> \n        <table id=\"tblActorAGear\" class=\"halftable\" >\n        <thead>\n        <tr><th class=\"leftpad\">Item</th><th class=\"alignLeftth\"></th><th class=\"leftpad\">Quantity</th><th class=\"leftpad\">Uses</th><th></th><th></th></tr>\n        </thead> \n        <tbody>\n        </tbody>\n        </table>\n      </td>  \n      \n      <td class=\"halftd\">\n        <table id=\"tblActorBGear\"class=\"halftable\"> \n        <thead>\n        <tr><th></th><th></th><th class=\"leftpad\">Item</th><th class=\"alignLeftth\"></th><th class=\"leftpad\">Quantity</th><th class=\"leftpad\">Uses</th></tr>\n        </thead>\n        <tbody>\n        </tbody>\n        </table>\n      </td>\n    </tr>  \n    </tbody>\n  </table> \n        \n  \n<script>\n  function singleQuote()\n  {\n    return '&quot;';\n  }\n  async function ExchangeGear(sourceActorID,targetActorID,itemID,itemCount=1,uses=1){ \n  try{\n    let actorSource =await game.actors.get(sourceActorID);\n    let actorTarget = await game.actors.get(targetActorID);\n    let item = await game.items.get(itemID);     \n    //console.log(item.img);\n    //console.log('Moving ' +itemCount + item.name + ' with ' + uses + ' uses '  +  ' from ' + actorSource.name + ' to ' + actorTarget.name );\n    let citem;   \n    let subitemsTag;\n    let isTab = false;\n    let subiDataKey;\n    let isUnique = false; \n    subitemsTag = \"citems\";\n    subiDataKey = \"ciKey\";\n    let subitems;  \n    \n    // check if target already has this citem\n    citem = actorTarget.data.data.citems.find(y=>y.name == item.name);\n    // target handling\n    if(citem==null){\n      // add it to target\n      citem = await actorTarget.addcItem(item);\n      //\n      subitems = actorTarget.data.data[subitemsTag];\n      for (let i=0;i<subitems.length;i++) {\n        if (subitems[i].id == itemID) {\n          subitems[i].number = parseInt(itemCount);\n          subitems[i].uses = parseInt(uses);                   \n          actorTarget.data.data.citems= subitems;                                                 \n        }\n      } \n    }\n    else    \n    {\n      // increase count on target      \n      subitems = actorTarget.data.data[subitemsTag];\n      for (let i=0;i<subitems.length;i++) {\n        if (subitems[i].id == itemID) {\n          subitems[i].number = parseInt(subitems[i].number) + parseInt(itemCount);\n          subitems[i].uses = parseInt(subitems[i].uses) + parseInt(uses);                   \n          actorTarget.data.data.citems= subitems;                                                 \n        }\n      }      \n    }  \n    // now adjust source\n    citem = actorSource.data.data.citems.find(y=>y.name == item.name); \n    if(citem.number==1){\n      // delete it \n      await actorSource.deletecItem(itemID);        \n    }             \n    else{        \n      subitems = actorSource.data.data[subitemsTag];\n      for (let i=0;i<subitems.length;i++) {\n        if (subitems[i].id == itemID) {\n          subitems[i].number = parseInt(subitems[i].number) - itemCount;\n          if(parseInt(subitems[i].uses) - parseInt(uses)<=0){ \n             subitems[i].uses =0;\n          }\n          else{\n            subitems[i].uses = parseInt(subitems[i].uses) - parseInt(uses);\n          } \n          actorSource.data.data.citems= subitems;\n          if (subitems[i].number==0){\n            await actorSource.deletecItem(itemID);\n          }                                                 \n        }\n      }\n    }                          \n    // update both\n    await actorTarget.update(actorTarget.data); \n    await actorSource.update(actorSource.data);\n    // finally refresh list \n    ListGear();\n    }\n    catch(err){\n      console.log('ERR:' + err);\n    }\n  }\n  async function ListGear(){\n    let itemSelectedGroupKey=Setting_GearGroupKey();       \n    let selected = canvas.tokens.controlled;  // the user must have OWNER for both actors\n    if (selected!=null){\n      if (selected.length>=2){ \n        // use the first selected token as source A\n        let tokenA = selected[0];\n        const actorA = tokenA.actor;\n        let actorAID=actorA._id;\n        // use second selected token as source B\n        let tokenB = selected[1];\n        const actorB = tokenB.actor;\n        let actorBID=actorB._id;        \n        let thCell;   \n        let table ;\n        let row;\n        let tdCell;   \n        let item;\n        let usestomoveforsingleitem=1;\n        // list all citems for actor a   \n        console.log(actorA.name);       \n        thCell = document.getElementById(\"ActorAName\");\n        thCell.innerHTML= actorA.name;\n        thCell = document.getElementById(\"ActorAPortrait\");\n        thCell.innerHTML='<img style=\"height:48px;width:48px;object-fit:cover;object-position:50% 0;margin: 0 8px 0 2px;border: none;\" src=\"' + actorA.data.img +'\"</img>'; \n        table= document.getElementById(\"tblActorAGear\"); \n        // empty table\n        if (table.rows.length>0){\n          for(let i=table.rows.length;i>1;i--){\n            table.deleteRow(-1);\t\n          }\n        }        \n        let citems;\n        citems = actorA.data.data.citems;\n        if(citems!=null){\n          for(let l=0;l<citems.length;l++){            \n            let citem=citems[l];\n            // check if this citem has any group                \n            if (citem.groups.length>0){                         \n              // loop all the groups of this citem                 \n              for(let iGroup=0;iGroup<citem.groups.length;iGroup++){  \n                //console.log(citem.groups[iGroup]);\n                if(citem.groups[iGroup].ikey==itemSelectedGroupKey){ \n                  //console.log(citem.id + \" \" +citem.number + \" \" +citem.name ); \n                  console.log(citem);\n                  row=table.insertRow(-1);  \n                  let item = game.items.get(citem.id);     \n                   \n                  tdCell=row.insertCell(-1)\n                  tdCell.className='itemimage';\n                  tdCell.innerHTML='<img class=\"item\" src=\"' + item.img + '\"></img>';\n                  \n                  tdCell=row.insertCell(-1)\n                  tdCell.innerHTML=citem.name;\n                  tdCell=row.insertCell(-1);\n                  tdCell.innerHTML=citem.number; \n                  tdCell.className='centerAlign';\n                  tdCell=row.insertCell(-1);                     \n                  if(citem.number==1){\n                    usestomoveforsingleitem=citem.uses;\n                  }                       \n                  else{\n                    if(citem.uses<citem.maxuses){\n                      usestomoveforsingleitem=citem.uses;\n                    }                                    \n                    else{                    \n                      usestomoveforsingleitem=citem.maxuses;\n                    }\n                  }                    \n                  if(citem.usetype== 'CON'){\n                    //console.log(citem); \n                    tdCell.innerHTML=citem.uses + '/' + (citem.maxuses*citem.number) ;                    \n                  } \n                  else{\n                    tdCell.innerHTML='';\n                  }\n                  tdCell.className='centerAlign'; \n                  tdCell=row.insertCell(-1);                       \n                  tdCell.innerHTML='<i title=\"Move all items\" class=\" fas fa-angle-double-right hbo\" onclick=\"ExchangeGear(' + singleQuote() + actorAID  + singleQuote() +','+ singleQuote()+ actorBID + singleQuote() +',' + singleQuote() + citem.id + singleQuote() +',' +singleQuote() + citem.number +singleQuote() +','+singleQuote() + citem.uses +singleQuote()  +');\"></i>';                  \n                  tdCell.className='moveaction';\n                  tdCell=row.insertCell(-1);                                       \n                  tdCell.innerHTML='<i title=\"Move single item\" class=\" fas fa-angle-right hbo\" onclick=\"ExchangeGear(' + singleQuote() + actorAID  + singleQuote() +','+ singleQuote()+ actorBID + singleQuote() +',' + singleQuote() + citem.id + singleQuote() +',1,' +singleQuote() + usestomoveforsingleitem +singleQuote()  +');\"></i>';\n                  tdCell.className='moveaction'; \n                }                    \n              }                                        \n            }\n          }\n        }\n        // list alll items for actor b \n        //console.log(actorB.name);  \n        thCell = document.getElementById(\"ActorBName\");\n        thCell.innerHTML= actorB.name;\n        thCell = document.getElementById(\"ActorBPortrait\");\n        thCell.innerHTML='<img style=\"height:48px;width:48px;object-fit:cover;object-position:50% 0;margin: 0 8px 0 2px;border: none;\" src=\"' + actorB.data.img +'\"</img>'; \n        table= document.getElementById(\"tblActorBGear\");\n        // empty table\n        if (table.rows.length>0){\n          for(let i=table.rows.length;i>1;i--){\n            table.deleteRow(-1);\t\n          }\n        }        \n        citems = actorB.data.data.citems;\n        if(citems!=null){\n          for(let l=0;l<citems.length;l++){            \n            let citem=citems[l];\n            // check if this citem has any group                \n            if (citem.groups.length>0){                         \n              // loop all the groups of this citem\n              for(let iGroup=0;iGroup<citem.groups.length;iGroup++){\n                if(citem.groups[iGroup].ikey==itemSelectedGroupKey){ \n                  //console.log(citem.id + \" \" +citem.number + \" \" +citem.name );                   \n                  row=table.insertRow(-1);         \n                  tdCell=row.insertCell(-1); \n                  if(citem.number==1){\n                    usestomoveforsingleitem=citem.uses;\n                  }                       \n                  else{\n                    if(citem.uses<citem.maxuses){\n                      usestomoveforsingleitem=citem.uses;\n                    }                                    \n                    else{                    \n                      usestomoveforsingleitem=citem.maxuses;\n                    }\n                  }                 \n                  tdCell.innerHTML='<i title=\"Move single item\" class=\" fas fa-angle-left hbo\" onclick=\"ExchangeGear(' + singleQuote() + actorBID  + singleQuote() +','+ singleQuote()+ actorAID + singleQuote() +',' + singleQuote() + citem.id + singleQuote() +',1,' +singleQuote() + usestomoveforsingleitem +singleQuote()  +');\"></i>';\n                  tdCell.className='moveaction';\n                  tdCell=row.insertCell(-1);                  \n                  tdCell.innerHTML='<i title=\"Move all items\" class=\" fas fa-angle-double-left hbo\" onclick=\"ExchangeGear(' + singleQuote() + actorBID  + singleQuote() +','+ singleQuote()+ actorAID + singleQuote() +',' + singleQuote() + citem.id + singleQuote() +',' +singleQuote() + citem.number +singleQuote() +','+singleQuote() + citem.uses +singleQuote()   +');\"></i>';\n                  tdCell.className='moveaction'; \n                  let item = game.items.get(citem.id);\n                  tdCell=row.insertCell(-1) \n                  tdCell.className='itemimage';\n                  tdCell.innerHTML='<img class=\"item\" src=\"' + item.img + '\"></img>';\n                  tdCell=row.insertCell(-1)\n                  tdCell.innerHTML=citem.name;\n                  tdCell=row.insertCell(-1)\n                  tdCell.innerHTML=citem.number;  \n                  tdCell.className='centerAlign';\n                  tdCell=row.insertCell(-1); \n                  if(citem.usetype== 'CON'){ \n                    tdCell.innerHTML=citem.uses + '/' + (citem.maxuses*citem.number) ;                    \n                  } \n                  else{\n                    tdCell.innerHTML='';\n                  }\n                  tdCell.className='centerAlign';\n                }                    \n              }                                        \n            }\n          }\n        }                        \n      }    \n    }        \n  }    \n  ListGear();\n</script>\n`;\n// HTML Form completed\n// show it as dialog\nlet d = new Dialog({\n title: \"Intercambio de objetos\",\n content: html,\n buttons: {\n  },\n});\nd.options.width = 600;\nd.position.width = 600;\nd.render(true);",
  "author": "NLu8dzFBI3Kvrwky",
  "img": "icons/svg/dice-target.svg",
  "actorIds": [],
  "_id": "mxnfcu3sUMe6BJan"
}